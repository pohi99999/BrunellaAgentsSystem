version: "3.9"

services:
  backend:
    build: ./backend
    container_name: brunella-backend
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - QWEN_API_KEY=${QWEN_API_KEY}
      - LANGSMITH_API_KEY=${LANGSMITH_API_KEY}
      - DATABASE_URL=postgresql://brunella:secret@db:5432/agents
      - REDIS_URL=redis://redis:6379/0
      - OLLAMA_MODEL=${OLLAMA_MODEL:-qwen2.5-coder:7b}
    
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      args:
        VITE_API_URL: "http://localhost:8000/agent"
    container_name: brunella-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend

  db:
    image: postgres:15-alpine
    container_name: brunella-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=brunella
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=agents
    volumes:
      # Tárolás a repo mappán belül (G: meghajtó), hogy ne a C:-re kerüljön
      - ./docker-data/postgres:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: brunella-redis
    restart: unless-stopped
    volumes:
      # Redis adat a G: meghajtón (repo mappa alatt)
      - ./docker-data/redis:/data

